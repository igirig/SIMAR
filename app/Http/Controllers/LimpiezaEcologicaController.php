<?php

namespace App\Http\Controllers;

use App\Models\LimpiezaEcologica;
use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\Estacion;
use App\Models\Municipio;
use App\Models\Estado;
use Illuminate\Support\Facades\DB;
use mikehaertl\pdftk\Pdf;
class LimpiezaEcologicaController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        //$data = LimpiezaEcologica::all();
        //return view('manifiestos.LE', compact('data'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        $items = LimpiezaEcologica::all(['razonSocial', 'id']);
        return view('manifiestos.LE', compact('items'));
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        if($request->inputServiceStation == null){
            return redirect()->route('LE.create')->with('error', "Seleccione una opcion valida.");
        }else{
            $estacion = Estacion::where('id', $request->inputServiceStation)->get();
            $estado = DB::table('estados')->where('id', $estacion{0}{'estado_id'})->get('nombre');
            $municipio = DB::table('municipios')->where('id', $estacion{0}{'municipio_id'})->get('nombre');

            // Create an instance for a single file
            $pdf = new Pdf('public\pdfs\CLE.pdf');

            // Alternatively add files later. Handles are autogenerated in this case.
            $pdf = new Pdf();
            $pdf->addFile('/path/to/file1.pdf');
            $pdf->addFile('/path/to/file2.pdf');

            // Add files with own handle
            $pdf = new Pdf();
            $pdf->addFile('/path/to/file1.pdf', 'A');
            $pdf->addFile('/path/to/file2.pdf', 'B');
            // Add file with handle and password
            $pdf->addFile('/path/to/file3.pdf', 'C', 'secret*password');

            // Shortcut to pass all files to the constructor
            $pdf = new Pdf([
                'A' => ['/path/to/file1.pdf', 'secret*password1'],
                'B' => ['/path/to/file2.pdf', 'secret*password2'],
            ]);

            return($municipio) ;
        }
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\LimpiezaEcologica  $limpiezaEcologica
     * @return \Illuminate\Http\Response
     */
    public function show(LimpiezaEcologica $limpiezaEcologica)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Models\LimpiezaEcologica  $limpiezaEcologica
     * @return \Illuminate\Http\Response
     */
    public function edit(LimpiezaEcologica $limpiezaEcologica)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\LimpiezaEcologica  $limpiezaEcologica
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, LimpiezaEcologica $limpiezaEcologica)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\LimpiezaEcologica  $limpiezaEcologica
     * @return \Illuminate\Http\Response
     */
    public function destroy(LimpiezaEcologica $limpiezaEcologica)
    {
        //
    }
}
